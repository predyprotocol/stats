/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { StrategyQuoter, StrategyQuoterInterface } from '../StrategyQuoter'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IStrategyVault',
        name: '_strategy',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_strategyId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_strategyTokenAmount',
        type: 'uint256'
      },
      {
        internalType: 'address',
        name: '_recepient',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_maxMarginAmount',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          }
        ],
        internalType: 'struct IStrategyVault.StrategyTradeParams',
        name: '_tradeParams',
        type: 'tuple'
      }
    ],
    name: 'quoteDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalDepositMargin',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516104ef3803806104ef83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161046561008a600039600060ae01526104656000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063eb715d1514610030575b600080fd5b61004361003e36600461023a565b610055565b60405190815260200160405180910390f35b6040805163c661a33360e01b815260048101879052602481018690526001600160a01b0385811660448301526064820185905260016084830152835160a4830152602084015160c48301529183015160e48201526000917f0000000000000000000000000000000000000000000000000000000000000000169063c661a33390610104016020604051808303816000875af1925050508015610114575060408051601f3d908101601f19168201909252610111918101906102e4565b60015b610159573d808015610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b5061015181610164565b91505061015b565b505b95945050505050565b600061016f82610178565b50909392505050565b60008060008351606014610203576044845110156101d05760405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b60448201526064015b60405180910390fd5b600484019350838060200190518101906101ea9190610321565b60405162461bcd60e51b81526004016101c791906103ce565b838060200190518101906102179190610401565b9250925092509193909250565b634e487b7160e01b600052604160045260246000fd5b600080600080600085870360e081121561025357600080fd5b863595506020870135945060408701356001600160a01b038116811461027857600080fd5b93506060878101359350607f198201121561029257600080fd5b506040516060810181811067ffffffffffffffff821117156102b6576102b6610224565b80604052506080870135815260a0870135602082015260c08701356040820152809150509295509295909350565b6000602082840312156102f657600080fd5b5051919050565b60005b83811015610318578181015183820152602001610300565b50506000910152565b60006020828403121561033357600080fd5b815167ffffffffffffffff8082111561034b57600080fd5b818401915084601f83011261035f57600080fd5b81518181111561037157610371610224565b604051601f8201601f19908116603f0116810190838211818310171561039957610399610224565b816040528281528760208487010111156103b257600080fd5b6103c38360208301602088016102fd565b979650505050505050565b60208152600082518060208401526103ed8160408501602087016102fd565b601f01601f19169190910160400192915050565b60008060006060848603121561041657600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220c1a601f8b135a2ebb9ccf69a337ee3cd405204aa5ed644c8e6314ae9351b56e564736f6c63430008130033'

export class StrategyQuoter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _strategy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategyQuoter> {
    return super.deploy(_strategy, overrides || {}) as Promise<StrategyQuoter>
  }
  getDeployTransaction(
    _strategy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_strategy, overrides || {})
  }
  attach(address: string): StrategyQuoter {
    return super.attach(address) as StrategyQuoter
  }
  connect(signer: Signer): StrategyQuoter__factory {
    return super.connect(signer) as StrategyQuoter__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): StrategyQuoterInterface {
    return new utils.Interface(_abi) as StrategyQuoterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyQuoter {
    return new Contract(address, _abi, signerOrProvider) as StrategyQuoter
  }
}
