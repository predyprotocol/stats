/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides
} from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { SupplyToken, SupplyTokenInterface } from '../SupplyToken'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_controller',
        type: 'address'
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string'
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string'
      },
      {
        internalType: 'uint8',
        name: '__decimals',
        type: 'uint8'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Approval',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Transfer',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      }
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256'
      }
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256'
      }
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162000ecb38038062000ecb833981016040819052620000349162000145565b8282600362000044838262000278565b50600462000053828262000278565b5050506001600160a01b039390931660805250506005805460ff191660ff90921691909117905562000344565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a857600080fd5b81516001600160401b0380821115620000c557620000c562000080565b604051601f8301601f19908116603f01168101908282118183101715620000f057620000f062000080565b816040528381526020925086838588010111156200010d57600080fd5b600091505b8382101562000131578582018301518183018401529082019062000112565b600093810190920192909252949350505050565b600080600080608085870312156200015c57600080fd5b84516001600160a01b03811681146200017457600080fd5b60208601519094506001600160401b03808211156200019257600080fd5b620001a08883890162000096565b94506040870151915080821115620001b757600080fd5b50620001c68782880162000096565b925050606085015160ff81168114620001de57600080fd5b939692955090935050565b600181811c90821680620001fe57607f821691505b6020821081036200021f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027357600081815260208120601f850160051c810160208610156200024e5750805b601f850160051c820191505b818110156200026f578281556001016200025a565b5050505b505050565b81516001600160401b0381111562000294576200029462000080565b620002ac81620002a58454620001e9565b8462000225565b602080601f831160018114620002e45760008415620002cb5750858301515b600019600386901b1c1916600185901b1785556200026f565b600085815260208120601f198616915b828110156200031557888601518255948401946001909101908401620002f4565b5085821015620003345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610b6462000367600039600081816102e801526103680152610b646000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101a8578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806340c10f191461016257806370a082311461017757806395d89b41146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e991906109ae565b60405180910390f35b610105610100366004610a18565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610a42565b6102a0565b60055460405160ff90911681526020016100e9565b61010561015d366004610a18565b6102c4565b610175610170366004610a18565b6102e6565b005b610119610185366004610a7e565b6001600160a01b031660009081526020819052604090205490565b6100dc610357565b6101756101b6366004610a18565b610366565b6101056101c9366004610a18565b6103ce565b6101056101dc366004610a18565b610449565b6101196101ef366004610aa0565b610457565b60606003805461020390610ad3565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610ad3565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b600033610294818585610482565b60019150505b92915050565b6000336102ae8582856105a7565b6102b9858585610621565b506001949350505050565b6000336102948185856102d78383610457565b6102e19190610b0d565b610482565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146103495760405162461bcd60e51b815260206004820152600360248201526205354360ec1b60448201526064015b60405180910390fd5b61035382826107c5565b5050565b60606004805461020390610ad3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146103c45760405162461bcd60e51b815260206004820152600360248201526205354360ec1b6044820152606401610340565b6103538282610884565b600033816103dc8286610457565b90508381101561043c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610340565b6102b98286868403610482565b600033610294818585610621565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104e45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610340565b6001600160a01b0382166105455760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610340565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105b38484610457565b9050600019811461061b578181101561060e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610340565b61061b8484848403610482565b50505050565b6001600160a01b0383166106855760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610340565b6001600160a01b0382166106e75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610340565b6001600160a01b0383166000908152602081905260409020548181101561075f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610340565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361061b565b6001600160a01b03821661081b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610340565b806002600082825461082d9190610b0d565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108e45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610340565b6001600160a01b038216600090815260208190526040902054818110156109585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610340565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161059a565b600060208083528351808285015260005b818110156109db578581018301518582016040015282016109bf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1357600080fd5b919050565b60008060408385031215610a2b57600080fd5b610a34836109fc565b946020939093013593505050565b600080600060608486031215610a5757600080fd5b610a60846109fc565b9250610a6e602085016109fc565b9150604084013590509250925092565b600060208284031215610a9057600080fd5b610a99826109fc565b9392505050565b60008060408385031215610ab357600080fd5b610abc836109fc565b9150610aca602084016109fc565b90509250929050565b600181811c90821680610ae757607f821691505b602082108103610b0757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea2646970667358221220dba0cd129d57aa3cea61ba7d000ac9423ffe73388b8e5f128421fcb0c6390f9664736f6c63430008130033'

export class SupplyToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _controller: string,
    _name: string,
    _symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SupplyToken> {
    return super.deploy(
      _controller,
      _name,
      _symbol,
      __decimals,
      overrides || {}
    ) as Promise<SupplyToken>
  }
  getDeployTransaction(
    _controller: string,
    _name: string,
    _symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _name,
      _symbol,
      __decimals,
      overrides || {}
    )
  }
  attach(address: string): SupplyToken {
    return super.attach(address) as SupplyToken
  }
  connect(signer: Signer): SupplyToken__factory {
    return super.connect(signer) as SupplyToken__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SupplyTokenInterface {
    return new utils.Interface(_abi) as SupplyTokenInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SupplyToken {
    return new Contract(address, _abi, signerOrProvider) as SupplyToken
  }
}
