/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Controller, ControllerInterface } from '../Controller'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'T',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'stableAssetId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'assetIds',
        type: 'uint256[]'
      }
    ],
    name: 'AssetGroupInitialized',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'riskRatio',
            type: 'uint256'
          },
          {
            internalType: 'int24',
            name: 'rangeSize',
            type: 'int24'
          },
          {
            internalType: 'int24',
            name: 'rebalanceThreshold',
            type: 'int24'
          }
        ],
        indexed: false,
        internalType: 'struct DataType.AssetRiskParams',
        name: 'riskParams',
        type: 'tuple'
      }
    ],
    name: 'AssetRiskParamsUpdated',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        indexed: false,
        internalType: 'struct InterestRateModel.IRMParams',
        name: 'irmParams',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        indexed: false,
        internalType: 'struct InterestRateModel.IRMParams',
        name: 'squartIRMParams',
        type: 'tuple'
      }
    ],
    name: 'IRMParamsUpdated',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8'
      }
    ],
    name: 'Initialized',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address'
      }
    ],
    name: 'OperatorUpdated',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_uniswapPool',
        type: 'address'
      }
    ],
    name: 'PairAdded',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'withdrawnProtocolFee',
        type: 'uint256'
      }
    ],
    name: 'ProtocolRevenueWithdrawn',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'isMainVault',
        type: 'bool'
      }
    ],
    name: 'VaultCreated',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'allowedUniswapPools',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_isolatedVaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          }
        ],
        internalType: 'struct IsolatedVaultLogic.CloseParams',
        name: '_closeParams',
        type: 'tuple'
      }
    ],
    name: 'closeIsolatedVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getAsset',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address'
          },
          {
            internalType: 'address',
            name: 'supplyTokenAddress',
            type: 'address'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'riskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'totalCompoundDeposited',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalCompoundBorrowed',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalNormalDeposited',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalNormalBorrowed',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'assetScaler',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'debtScaler',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'assetGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'debtGrowth',
                type: 'uint256'
              }
            ],
            internalType: 'struct ScaledAsset.TokenStatus',
            name: 'tokenStatus',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'uniswapPool',
                type: 'address'
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint256',
                name: 'totalAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowedAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'supplyPremiumGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremiumGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee1Growth',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionUnderlying',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionStable',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthStable',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.SqrtPerpAssetStatus',
            name: 'sqrtAssetStatus',
            type: 'tuple'
          },
          {
            internalType: 'bool',
            name: 'isMarginZero',
            type: 'bool'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'irmParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'squartIRMParams',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'lastUpdateTimestamp',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedProtocolRevenue',
            type: 'uint256'
          }
        ],
        internalType: 'struct DataType.AssetStatus',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getAssetGroup',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'stableAssetId',
            type: 'uint256'
          },
          {
            internalType: 'uint256[]',
            name: 'assetIds',
            type: 'uint256[]'
          }
        ],
        internalType: 'struct DataType.AssetGroup',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getLatestAssetStatus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address'
          },
          {
            internalType: 'address',
            name: 'supplyTokenAddress',
            type: 'address'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'riskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'totalCompoundDeposited',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalCompoundBorrowed',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalNormalDeposited',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'totalNormalBorrowed',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'assetScaler',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'debtScaler',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'assetGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'debtGrowth',
                type: 'uint256'
              }
            ],
            internalType: 'struct ScaledAsset.TokenStatus',
            name: 'tokenStatus',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'uniswapPool',
                type: 'address'
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint256',
                name: 'totalAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowedAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'supplyPremiumGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremiumGrowth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee1Growth',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionUnderlying',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionStable',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthStable',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.SqrtPerpAssetStatus',
            name: 'sqrtAssetStatus',
            type: 'tuple'
          },
          {
            internalType: 'bool',
            name: 'isMarginZero',
            type: 'bool'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'irmParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'squartIRMParams',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'lastUpdateTimestamp',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'accumulatedProtocolRevenue',
            type: 'uint256'
          }
        ],
        internalType: 'struct DataType.AssetStatus',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256'
      }
    ],
    name: 'getSqrtIndexPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: '',
        type: 'uint160'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256'
      }
    ],
    name: 'getSqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: '',
        type: 'uint160'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256'
      }
    ],
    name: 'getUtilizationRatio',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'assetId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryPremium',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeUnderlying',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeStable',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'perpTrade',
                type: 'tuple'
              }
            ],
            internalType: 'struct DataType.UserStatus[]',
            name: 'openPositions',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.Vault',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      }
    ],
    name: 'getVaultStatus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'isMainVault',
            type: 'bool'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'assetId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryPremium',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeUnderlying',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeStable',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getVaultStatusWithAddress',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'isMainVault',
            type: 'bool'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'assetId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryPremium',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeUnderlying',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeStable',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult',
        name: '',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'isMainVault',
            type: 'bool'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'assetId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryPremium',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeUnderlying',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'rebalanceEntryFeeStable',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stableAssetAddress',
        type: 'address'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        internalType: 'struct InterestRateModel.IRMParams',
        name: '_irmParams',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'uniswapPool',
            type: 'address'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'assetRiskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'irmParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'squartIRMParams',
            type: 'tuple'
          }
        ],
        internalType: 'struct DataType.AddAssetParams[]',
        name: '_addAssetParams',
        type: 'tuple[]'
      }
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_closeRatio',
        type: 'uint256'
      }
    ],
    name: 'liquidationCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_depositAmount',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'enableCallback',
            type: 'bool'
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes'
          }
        ],
        internalType: 'struct TradeLogic.TradeParams',
        name: '_tradeParams',
        type: 'tuple'
      }
    ],
    name: 'openIsolatedVault',
    outputs: [
      {
        internalType: 'uint256',
        name: 'isolatedVaultId',
        type: 'uint256'
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      }
    ],
    name: 'reallocate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address'
      }
    ],
    name: 'setOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      }
    ],
    name: 'settleUserBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      }
    ],
    name: 'supplyToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalMintAmount',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'enableCallback',
            type: 'bool'
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes'
          }
        ],
        internalType: 'struct TradeLogic.TradeParams',
        name: '_tradeParams',
        type: 'tuple'
      }
    ],
    name: 'tradePerp',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount0',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amount1',
        type: 'uint256'
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes'
      }
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256'
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes'
      }
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'riskRatio',
            type: 'uint256'
          },
          {
            internalType: 'int24',
            name: 'rangeSize',
            type: 'int24'
          },
          {
            internalType: 'int24',
            name: 'rebalanceThreshold',
            type: 'int24'
          }
        ],
        internalType: 'struct DataType.AssetRiskParams',
        name: '_riskParams',
        type: 'tuple'
      }
    ],
    name: 'updateAssetRiskParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        internalType: 'struct InterestRateModel.IRMParams',
        name: '_irmParams',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        internalType: 'struct InterestRateModel.IRMParams',
        name: '_squartIRMParams',
        type: 'tuple'
      }
    ],
    name: 'updateIRMParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_marginAmount',
        type: 'int256'
      }
    ],
    name: 'updateMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'vaultCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      }
    ],
    name: 'withdrawProtocolRevenue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_assetId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      }
    ],
    name: 'withdrawToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalBurnAmount',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'finalWithdrawAmount',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5060018055615b8080620000256000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636354c081116100f9578063b3ab15fb11610097578063eac8f5b811610071578063eac8f5b81461042b578063f3eb8cd81461043e578063fa461e3314610471578063fdb483c71461048457600080fd5b8063b3ab15fb146103f2578063b48477dc14610405578063d34879971461041857600080fd5b80639403b634116100d35780639403b634146103a357806395be76a2146103c3578063a7c6a100146103d6578063acfcd9fd146103df57600080fd5b80636354c0811461036a57806377db569a1461037d5780638f1f63291461039057600080fd5b8063286c31c01161016657806349ebb77d1161014057806349ebb77d14610311578063570ca7351461033157806358c4ff2b14610344578063617c425f1461035757600080fd5b8063286c31c0146102b35780632da848b2146102c857806335c8a407146102f057600080fd5b806313c732ba116101a257806313c732ba1461023c578063165604561461025157806318e80749146102675780632556efd21461029257600080fd5b806307159aec146101c95780630fe433db146101f2578063113528a81461021c575b600080fd5b6101dc6101d73660046143a8565b610497565b6040516101e9919061448c565b60405180910390f35b6102056102003660046143a8565b610737565b6040805192151583526020830191909152016101e9565b61022f61022a36600461476f565b6107c4565b6040516101e99190614884565b6102446108b4565b6040516101e99190614893565b61025961093d565b6040516101e9929190614a65565b61027a6102753660046143a8565b610bca565b6040516001600160a01b0390911681526020016101e9565b6102a56102a03660046143a8565b610c12565b6040519081526020016101e9565b6102c66102c13660046143a8565b610ccd565b005b6102db6102d63660046143a8565b610d55565b604080519283526020830191909152016101e9565b6103036102fe36600461476f565b610dda565b6040516101e9929190614ad7565b61032461031f3660046143a8565b61106b565b6040516101e99190614aec565b60085461027a906001600160a01b031681565b61022f610352366004614aff565b61112c565b6102a5610365366004614b61565b6113c9565b6102c6610378366004614c5a565b6114d3565b6102c661038b366004614b61565b611604565b6102c661039e366004614d6f565b61170f565b6103b66103b13660046143a8565b6117cb565b6040516101e99190614d9c565b6102c66103d1366004614e1f565b6119a1565b6102a560075481565b61027a6103ed3660046143a8565b611a6a565b6102c6610400366004614e5e565b611a92565b6102c6610413366004614b61565b611b23565b6102c6610426366004614ebc565b611c98565b6101dc6104393660046143a8565b611da0565b61046161044c366004614e5e565b60096020526000908152604090205460ff1681565b60405190151581526020016101e9565b6102c661047f366004614ebc565b611fd7565b6102db610492366004614b61565b612088565b61049f614087565b604051630b89429960e41b81526004808201526024810183905273__$7a0b87ce898fe502b2df3b643e5d7fb9ba$__9063b89429909060440160006040518083038186803b1580156104f057600080fd5b505af4158015610504573d6000803e3d6000fd5b5050506000928352505060046020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160608181018a52600387015482529786015480830b8289015263010000009004820b818a01528785015287516101008181018a52600587015482526006870154828901526007870154828b01526008870154828a01526009870154608083810191909152600a88015460a080850191909152600b89015460c080860191909152600c8a015460e080870191909152838a01959095528c516101a081018e52600d8b01549788168152600160a01b8804870b818d0152600160b81b90970490950b868d0152600e890154868c0152600f890154868301526010890154868201526011890154868601526012890154868501526013890154868401528b51808d018d5260148a0154815260158a0154818c0152610120808801919091528c51808e018e5260168b0154815260178b0154818d01526101408089019190915260188b01549888019890985260198a015461018088015290880195909552601a88015460ff1615159387019390935289518084018b52601b8801548152601c880154818a0152601d880154818c0152601e880154818b01529186019190915288519182018952601f86015482528587015496820196909652602185015497810197909752602284015495870195909552928101949094526023810154928401929092526024909101549082015290565b60008061074261219b565b60405163dca9a13960e01b81526004808201526024810184905273__$7a0b87ce898fe502b2df3b643e5d7fb9ba$__9063dca9a139906044016040805180830381865af4158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190614f19565b91509150915091565b6107cc61417b565b6107d4612203565b60008481526005602052604081206107ef906002908661225c565b90506107f961219b565b600085815260056020526040902061081190856124b0565b505060008581526005602052604090819020905163d811f13d60e01b815273__$bc9f384c073b2381249378965b2d698cf3$__9163d811f13d9161085f91600491899087908a908501614fe3565b61010060405180830381865af415801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190615019565b9150506108ad60018055565b9392505050565b6040805180820190915260008152606060208201526002604051806040016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561092f57602002820191906000526020600020905b81548152602001906001019080831161091b575b505050505081525050905090565b6109456141bf565b606061094f61219b565b336000908152600660209081526040808320815180830183528154815260018201805484518187028101870190955280855291949293858401939092908301828280156109bb57602002820191906000526020600020905b8154815260200190600101908083116109a7575b505050505081525050905060008160200151516001600160401b038111156109e5576109e56145f0565b604051908082528060200260200182016040528015610a1e57816020015b610a0b6141bf565b815260200190600190039081610a035790505b50905060005b826020015151811015610b265773__$4278c074fd6acd31e7e5f642d169fef5d3$__633cda4fcb60046005600087602001518681518110610a6757610a676150a5565b6020026020010151815260200190815260200160002086600001516040518463ffffffff1660e01b8152600401610ab1939291909283526020830191909152604082015260600190565b600060405180830381865af4158015610ace573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610af691908101906152b7565b828281518110610b0857610b086150a5565b60200260200101819052508080610b1e9061537c565b915050610a24565b5081516000908152600560205260409081902083519151633cda4fcb60e01b81526004808201526024810191909152604481019190915273__$4278c074fd6acd31e7e5f642d169fef5d3$__90633cda4fcb90606401600060405180830381865af4158015610b99573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bc191908101906152b7565b94909350915050565b6000818152600460205260408120600d0154610c0c90610bf2906001600160a01b0316612546565b6000848152600460205260409020601a015460ff166125b7565b92915050565b6000610c1c612203565b503360008181526006602052604090205490610c3b90829060016125e4565b600081815260056020526040908190209051630a4ff89760e01b815260048082015260248101829052604481018590529192509073__$1f4d3c4bb88e02f5b45caa05c79da92b33$__90630a4ff8979060640160006040518083038186803b158015610ca657600080fd5b505af4158015610cba573d6000803e3d6000fd5b5050505050610cc860018055565b919050565b610cd5612203565b806000108015610ce6575060075481105b610cef57600080fd5b610cf761219b565b6000818152600560205260408120610d0e90612707565b91505080610d485760405162461bcd60e51b8152602060048201526002602482015261219b60f11b60448201526064015b60405180910390fd5b50610d5260018055565b50565b60008181526004602081905260408083209051630f219e2160e01b8152839273__$4278c074fd6acd31e7e5f642d169fef5d3$__92630f219e2192610d9a9201615395565b6040805180830381865af4158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190615571565b6000610de461417b565b610dec612203565b336000908152600660209081526040808320548084526005835281842082516080810184528154815260018201546001600160a01b03168186015260028201548185015260038201805485518188028101880190965280865293969295610f9f95929487946060870194939284015b82821015610f9157600084815260209081902060408051808201825260118602909201805483528151610140810183526001808301546101008301908152600280850154610120850152908352845160e08082018752600386015482526004860154828a015260058601548288015260068601546060808401919091526007870154608080850191909152600888015460a080860191909152600989015460c080870191909152888d01959095528951808b018b52600a8a01548152600b8a0154818e0152888b01528951808b01909a52600c8901548a52600d8901548a8d015291870198909852600e87015480850b98870198909852630100000090970490920b95840195909552600f8401549483019490945260109092015492810192909252828401919091529083529092019101610e5b565b505050508152505033612716565b610fa761219b565b610fb081612707565b5050610fbf60003360006125e4565b60008181526005602052604090819020905163d17a2fd760e01b815291955073__$e2217eb696a5c09092bdef553420bd7ff4$__9163d17a2fd791611014916002916004918791908e908e908e908601615595565b61010060405180830381865af4158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190615019565b9250505061106360018055565b935093915050565b6110736141bf565b61107b61219b565b600082815260056020908152604080832060018101546001600160a01b03168452600690925291829020549151633cda4fcb60e01b81526004808201526024810182905260448101929092529073__$4278c074fd6acd31e7e5f642d169fef5d3$__90633cda4fcb90606401600060405180830381865af4158015611104573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ad91908101906152b7565b61113461417b565b61113c612203565b336000908152600660209081526040808320548084526005835281842088855282852083516080810185528254815260018301546001600160a01b0316818701526002830154818601526003830180548651818902810189019097528087529497939692956112e995929488946060870194929392919084018215610f9157600084815260209081902060408051808201825260118602909201805483528151610140810183526001808301546101008301908152600280850154610120850152908352845160e08082018752600386015482526004860154828a015260058601548288015260068601546060808401919091526007870154608080850191909152600888015460a080860191909152600989015460c080870191909152888d01959095528951808b018b52600a8a01548152600b8a0154818e0152888b01528951808b01909a52600c8901548a52600d8901548a8d015291870198909852600e87015480850b98870198909852630100000090970490920b95840195909552600f8401549483019490945260109092015492810192909252828401919091529083529092019101610e5b565b6112f161219b565b604080516312d11e9f60e11b815260026004808301919091526024820152604481018490526064810183905260848101889052865160a4820152602087015160c48201529086015160e482015273__$e2217eb696a5c09092bdef553420bd7ff4$__906325a23d3e906101040161010060405180830381865af415801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a09190615019565b33600090815260066020526040902082549195506113bd9161277e565b5050506108ad60018055565b60006113d3612203565b604051630b89429960e41b81526004808201526024810184905273__$7a0b87ce898fe502b2df3b643e5d7fb9ba$__9063b89429909060440160006040518083038186803b15801561142457600080fd5b505af4158015611438573d6000803e3d6000fd5b5050506000848152600460208190526040918290209151636f4a9f2560e11b8152908101919091526024810184905273__$22e71cc2a9e9de4b2967c224ed91c7d01e$__915063de953e4a90604401602060405180830381865af41580156114a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c891906155d9565b9050610c0c60018055565b600054610100900460ff16158080156114f35750600054600160ff909116105b8061150d5750303b15801561150d575060005460ff166001145b6115705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d3f565b6000805460ff191660011790558015611593576000805461ff0019166101001790555b6001600755600880546001600160a01b031916331790556115b5848484612835565b505080156115fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50505050565b6008546001600160a01b0316331461162e5760405162461bcd60e51b8152600401610d3f906155f2565b60008111801561164f57506000828152600460205260409020602401548111155b6116805760405162461bcd60e51b8152602060048201526002602482015261086760f31b6044820152606401610d3f565b600082815260046020526040812060240180548392906116a190849061560e565b909155505080156116d2576000828152600460205260409020600101546116d2906001600160a01b031633836129bd565b60408051838152602081018390527f5a6209ab9405f06c2021fba7427042ac316e7d24950bcd298a3648a478106720910160405180910390a15050565b6008546001600160a01b031633146117395760405162461bcd60e51b8152600401610d3f906155f2565b61174281612ab6565b600082815260046020818152604092839020845160038201559084015191810180548585015162ffffff90811663010000000265ffffffffffff199092169416939093179290921790915590517f92ed2b5ec0745b7234f6ab040b7f173361ca415308f4c5f82bf30472e3b72864906117be9085908590615621565b60405180910390a1505050565b6117ff60405180608001604052806000815260200160006001600160a01b0316815260200160008152602001606081525090565b600082815260056020908152604080832081516080810183528154815260018201546001600160a01b031681850152600282015481840152600382018054845181870281018701909552808552919592946060870194939192919084015b8282101561199357600084815260209081902060408051808201825260118602909201805483528151610140810183526001808301546101008301908152600280850154610120850152908352845160e08082018752600386015482526004860154828a015260058601548288015260068601546060808401919091526007870154608080850191909152600888015460a080860191909152600989015460c080870191909152888d01959095528951808b018b52600a8a01548152600b8a0154818e0152888b01528951808b01909a52600c8901548a52600d8901548a8d015291870198909852600e87015480850b98870198909852630100000090970490920b95840195909552600f840154948301949094526010909201549281019290925282840191909152908352909201910161185d565b505050915250909392505050565b6008546001600160a01b031633146119cb5760405162461bcd60e51b8152600401610d3f906155f2565b6119d482612b4f565b6119dd81612b4f565b6000838152600460209081526040918290208451601b82015584820151601c82015584830151601d820155606080860151601e8301558451601f830155848301519282019290925583830151602182015590830151602282015590517f1c30ef2fd5ebfa8ce15b3911c201569545d1887fb5822d48843b2f458cdaac3b906115f590869086908690615652565b6000818152600460205260408120600d0154610c0c90610bf2906001600160a01b0316612bd5565b6008546001600160a01b03163314611abc5760405162461bcd60e51b8152600401610d3f906155f2565b6001600160a01b038116611acf57600080fd5b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b611b2b612203565b600082815260056020526040902060018101546001600160a01b0316611b5057600080fd5b611b5861219b565b60018101546001600160a01b031660009081526006602090815260408083205480845260059092528083209051634509d2df60e11b815260048082015260248101859052604481019190915260648101859052909190819073__$a1fa80d38d689cae49e54718da49b6432c$__90638a13a5be906084016040805180830381865af4158015611beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0f91906156b3565b915091508015611c415760018401546001600160a01b031660009081526006602052604090208454611c41919061277e565b8115611c8757600160005260046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0654611c87906001600160a01b031633846129bd565b50505050611c9460018055565b5050565b3360009081526009602052604090205460ff16611cb457600080fd5b338415611d2757611d27816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2091906156e3565b33876129bd565b8315611d9957611d99816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9291906156e3565b33866129bd565b5050505050565b611da8614087565b50600090815260046020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160608181018a52600387015482529786015480830b8289015263010000009004820b818a01528785015287516101008181018a52600587015482526006870154828901526007870154828b01526008870154828a01526009870154608083810191909152600a88015460a080850191909152600b89015460c080860191909152600c8a015460e080870191909152838a01959095528c516101a081018e52600d8b01549788168152600160a01b8804870b818d0152600160b81b90970490950b868d0152600e890154868c0152600f890154868301526010890154868201526011890154868601526012890154868501526013890154868401528b51808d018d5260148a0154815260158a0154818c0152610120808801919091528c51808e018e5260168b0154815260178b0154818d01526101408089019190915260188b01549888019890985260198a015461018088015290880195909552601a88015460ff1615159387019390935289518084018b52601b8801548152601c880154818a0152601d880154818c0152601e880154818b01529186019190915288519182018952601f86015482528587015496820196909652602185015497810197909752602284015495870195909552928101949094526023810154928401929092526024909101549082015290565b3360009081526009602052604090205460ff16611ff357600080fd5b33600085131561203e5761203e816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cfc573d6000803e3d6000fd5b6000841315611d9957611d99816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d6e573d6000803e3d6000fd5b600080612093612203565b604051630b89429960e41b81526004808201526024810185905273__$7a0b87ce898fe502b2df3b643e5d7fb9ba$__9063b89429909060440160006040518083038186803b1580156120e457600080fd5b505af41580156120f8573d6000803e3d6000fd5b5050506000858152600460208190526040918290209151631342351560e31b8152908101919091526024810185905273__$22e71cc2a9e9de4b2967c224ed91c7d01e$__9150639a11a8a8906044016040805180830381865af4158015612163573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121879190615571565b9150915061219460018055565b9250929050565b60405163064524cf60e31b81526002600480830191909152602482015273__$7a0b87ce898fe502b2df3b643e5d7fb9ba$__9063322926789060440160006040518083038186803b1580156121ef57600080fd5b505af41580156115fe573d6000803e3d6000fd5b6002600154036122555760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610d3f565b6002600155565b604080516080810182528354815260018401546001600160a01b03166020808301919091526002850154828401526003850180548451818402810184019095528085526000946123e89493889360608601939091889084018215610f9157600084815260209081902060408051808201825260118602909201805483528151610140810183526001808301546101008301908152600280850154610120850152908352845160e08082018752600386015482526004860154828a015260058601548288015260068601546060808401919091526007870154608080850191909152600888015460a080860191909152600989015460c080870191909152888d01959095528951808b018b52600a8a01548152600b8a0154818e0152888b01528951808b01909a52600c8901548a52600d8901548a8d015291870198909852600e87015480850b98870198909852630100000090970490920b95840195909552600f8401549483019490945260109092015492810192909252828401919091529083529092019101610e5b565b6124688285604051806040016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561245157602002820191906000526020600020905b81548152602001906001019080831161243d575b505050505081525050612bea90919063ffffffff16565b61249e5760405162461bcd60e51b81526020600482015260076024820152661054d4d155125160ca1b6044820152606401610d3f565b6124a88383612c45565b949350505050565b60405163c906a0dd60e01b8152600481810152602481018390526044810182905260609060009073__$7046bc99c44940d8afdd1f5826a68a8b5f$__9063c906a0dd90606401600060405180830381865af4158015612513573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261253b9190810190615700565b915091509250929050565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125aa91906157b4565b5094979650505050505050565b600081156125dd576125d66001600160a01b038416600160c01b615862565b9050610c0c565b5081610c0c565b60008360000361270057600780549060006125fe8361537c565b9091555090506001600160a01b03831661263f5760405162461bcd60e51b8152602060048201526002602482015261433560f01b6044820152606401610d3f565b600081815260056020526040902081815560010180546001600160a01b0319166001600160a01b0385161790558115612699576001600160a01b03831660009081526006602052604090206126949082612e03565b6126bb565b6001600160a01b03831660009081526006602052604090206126bb9082612e3b565b604080518281523360208201528315158183015290517f2426281c09515ec0a53173de7284551c54a4c6fc61de7d2ccb225a44eee0c98b9181900360600190a16108ad565b50826108ad565b606060006107bb8360006124b0565b81516127345760405162461bcd60e51b8152600401610d3f90615876565b806001600160a01b031682602001516001600160a01b031614611c945760405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606401610d3f565b6000811161279e5760405162461bcd60e51b8152600401610d3f90615876565b81548190036127ab575050565b600061282483604051806040016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561281557602002820191906000526020600020905b815481526020019060010190808311612801575b50505050508152505083612eac565b90506128308382612f35565b505050565b60006060600191506128948286600080604051806060016040528060008152602001600060020b8152602001600060020b8152508960405180608001604052806000815260200160008152602001600081526020016000815250612fb0565b6002829055600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0182905582516001600160401b038111156128e7576128e76145f0565b604051908082528060200260200182016040528015612910578160200160208202803683370190505b50905060005b835181101561297b5761294c61292d826002615892565b85838151811061293f5761293f6150a5565b6020026020010151613334565b82828151811061295e5761295e6150a5565b6020908102919091010152806129738161537c565b915050612916565b507f26c7b90c1b486b10d84500b5c9d96e3ddb40f753b44ff5d96bef531d8455b7c682826040516129ad9291906158a5565b60405180910390a1935093915050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612a1991906158e6565b6000604051808303816000865af19150503d8060008114612a56576040519150601f19603f3d011682016040523d82523d6000602084013e612a5b565b606091505b5091509150818015612a85575080511580612a85575080806020019051810190612a859190615902565b611d995760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610d3f565b80516305f5e100108015612acf57508051633b9aca0010155b612b005760405162461bcd60e51b8152602060048201526002602482015261043360f41b6044820152606401610d3f565b6000816020015160020b138015612b1e57506000816040015160020b135b610d525760405162461bcd60e51b8152602060048201526002602482015261043360f41b6044820152606401610d3f565b8051670de0b6b3a764000010801590612b745750670de0b6b3a7640000816020015111155b8015612b8c5750670de0b6b3a7640000816040015111155b8015612ba45750678ac7230489e80000816060015111155b610d525760405162461bcd60e51b815260206004820152600260248201526110cd60f21b6044820152606401610d3f565b6000612be382610708613676565b5092915050565b6000805b836020015151811015612c3b578284602001518281518110612c1257612c126150a5565b602002602001015103612c29576001915050610c0c565b80612c338161537c565b915050612bee565b5060009392505050565b6000805b6003840154811015612cbf5782846003018281548110612c6b57612c6b6150a5565b90600052602060002090601102016000015403612cad57836003018181548110612c9757612c976150a5565b9060005260206000209060110201915050610c0c565b80612cb78161537c565b915050612c49565b50826003016040518060400160405280848152602001612cdd613afe565b905281546001818101845560009384526020938490208351601190930201918255918301518051805183850155840151600283015580840151805160038085019190915581860151600485015560408083015160058601556060808401516006870155608080850151600788015560a080860151600889015560c0958601516009890155928601518051600a890155890151600b880155908501518051600c88015590970151600d86015595830151600e850180549785015162ffffff90811663010000000265ffffffffffff1990991692169190911796909617909555810151600f83015560e0015160109091015590840180549091612ddd9161560e565b81548110612ded57612ded6150a5565b9060005260206000209060110201905092915050565b815415612e375760405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606401610d3f565b9055565b60008111612e5b5760405162461bcd60e51b8152600401610d3f90615876565b6001808301805491820181556000818152602090209091018290555460641015611c945760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610d3f565b6000600019815b846020015151811015612efe578385602001518281518110612ed757612ed76150a5565b602002602001015103612eec57809150612efe565b80612ef68161537c565b915050612eb3565b5060648111156108ad5760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610d3f565b600180830180549091612f479161560e565b81548110612f5757612f576150a5565b9060005260206000200154826001018281548110612f7757612f776150a5565b60009182526020909120015560018201805480612f9657612f9661591f565b600190038181906000526020600020016000905590555050565b6001600160a01b03841615612fc857612fc883612ab6565b60008781526004602052604090205415612fe157600080fd5b60408051610160810182528881526001600160a01b0388166020820181905282516351c71be960e11b81526004810191909152909182019073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__9063a38e37d290602401602060405180830381865af4158015613055573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061307991906156e3565b6001600160a01b03168152602001848152602001613095613bec565b81526020016130b68686602001516130ac90615935565b8760200151613c49565b81528615156020808301919091526040808301869052606080840186905242608080860191909152600060a09586018190528d815260048086529084902087518155878601516001820180546001600160a01b039283166001600160a01b031991821617909155898701516002840180549184169190921617905588850151805160038401558088015193830180549188015162ffffff90811663010000000265ffffffffffff1990931695811695909517919091179055888401518051600584015580880151600684015580870151600784015580860151600884015580850151600984015580890151600a84015560c080820151600b85015560e091820151600c8501558a8a01518051600d86018054838d0151848d01518a16600160b81b0262ffffff60b81b1991909a16600160a01b026001600160b81b03199092169388169390931717919091169690961790955584870151600e85015594840151600f8401559783015160108301558284015160118301558288015160128301556101008381015160138401556101208085015180516014860155890151601585015561014080860151805160168701558a015160178601556101608601516018860155610180909501516019850155948a0151601a8401805491151560ff19909216919091179055978901518051601b84015580880151601c84015580870151601d840155850151601e830155968801518051601f830155808701519682019690965593850151602185015593909101516022830155840151602382015592015160249092019190915584161561332b576001600160a01b0384166000908152600960205260409020805460ff191660011790555b50505050505050565b805160016000908152600460208181527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe065460408051630dfe168160e01b815290519495946001600160a01b0392831694859493871693630dfe168193808301939192908290030181865afa1580156133b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d591906156e3565b6001600160a01b0316148061345c5750806001600160a01b0316826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561342d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061345191906156e3565b6001600160a01b0316145b61348d5760405162461bcd60e51b8152602060048201526002602482015261433360f01b6044820152606401610d3f565b6000816001600160a01b0316836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134fb91906156e3565b6001600160a01b03161490506135f3868261357757846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561354e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061357291906156e3565b6135d9565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135d991906156e3565b83886000015189602001518a604001518b60600151612fb0565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018690558451604080518881526001600160a01b0390921660208301527f7542208db6aa6ef6792bdfe7e7e9b59d32521a551b7c007f0bf9b1afbe257c39910160405180910390a15093949350505050565b60408051600280825260608201835260009283928392909160208301908036833701905050905083816000815181106136b1576136b16150a5565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106136e0576136e06150a5565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd60e01b846040516024016137209190615957565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161375e91906158e6565b600060405180830381855afa9150503d8060008114613799576040519150601f19603f3d011682016040523d82523d6000602084013e61379e565b606091505b509150915081613a7e5760405160206024820152600360448201526213d31160ea1b606482015260840160408051601f19818403018152919052602080820180516001600160e01b031662461bcd60e51b17815291519091208251918301919091201461380e5761380e81613d1d565b600080886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561384f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061387391906157b4565b5050509350935050506000808a6001600160a01b031663252c09d78486600161389c91906159a1565b6138a691906159bc565b6040516001600160e01b031960e084901b16815261ffff9091166004820152602401608060405180830381865afa1580156138e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061390991906159ef565b935050509150806139845760405163252c09d760e01b8152600060048201526001600160a01b038c169063252c09d790602401608060405180830381865afa158015613959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397d91906159ef565b5091935050505b61399463ffffffff83164261560e565b995089876000815181106139aa576139aa6150a5565b602002602001019063ffffffff16908163ffffffff16815250508a6001600160a01b031663883bdbfd60e01b886040516024016139e79190615957565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613a2591906158e6565b600060405180830381855afa9150503d8060008114613a60576040519150601f19603f3d011682016040523d82523d6000602084013e613a65565b606091505b50909650945085613a7957613a7985613d1d565b505050505b600081806020019051810190613a949190615a53565b905060008782600081518110613aac57613aac6150a5565b602002602001015183600181518110613ac757613ac76150a5565b6020026020010151613ad99190615adf565b613ae39190615b0c565b90506000613af082613d64565b9a9899505050505050505050565b613b066141fe565b604051806101000160405280604051806040016040528060008152602001600081525081526020016040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152508152602001613b986040805180820182526000808252602091820181905282518084019093528083529082015290565b8152602001613bc86040805180820182526000808252602091820181905282518084019093528083529082015290565b81526000602082018190526040820181905260608201819052608090910152919050565b613bf46142ca565b60405180610100016040528060008152602001600081526020016000815260200160008152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001600081526020016000815250905090565b613c5161430f565b604051806101a00160405280856001600160a01b031681526020018460020b81526020018360020b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001613cd36040805180820182526000808252602091820181905282518084019093528083529082015290565b8152602001613d036040805180820182526000808252602091820181905282518084019093528083529082015290565b815260200160008152602001600081525090509392505050565b805115613d2c57805181602001fd5b60405162461bcd60e51b815260206004820152600d60248201526c3297b2b6b83a3c96b2b93937b960991b6044820152606401610d3f565b60008060008360020b12613d7b578260020b613d83565b8260020b6000035b9050620d89e8811115613da9576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613dc057600160801b613dd2565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613e06576ffff97272373d413259a46990580e213a0260801c5b6004821615613e25576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613e44576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613e63576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613e82576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613ea1576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613ec0576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613ee0576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613f00576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613f20576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613f40576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613f60576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613f80576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613fa0576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613fc0576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613fe1576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614001576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614020576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561403d576b048a170391f7dc42444e8fa20260801c5b60008460020b131561405e57806000198161405a5761405a61584c565b0490505b640100000000810615614072576001614075565b60005b60ff16602082901c0192505050919050565b6040518061016001604052806000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016140e4604051806060016040528060008152602001600060020b8152602001600060020b81525090565b81526020016140f16142ca565b81526020016140fe61430f565b81526020016000151581526020016141376040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016141676040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081525090565b60405180606001604052806141676040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e001604052806000815260200160001515815260200160008152602001600081526020016000815260200160008152602001606081525090565b60408051610140810190915260006101008201818152610120830191909152819081526020016142646040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001614286604051806040016040528060008152602001600081525090565b81526020016142a8604051806040016040528060008152602001600081525090565b8152600060208201819052604082018190526060820181905260809091015290565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101a0016040528060006001600160a01b03168152602001600060020b8152602001600060020b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001614386604051806040016040528060008152602001600081525090565b8152602001614167604051806040016040528060008152602001600081525090565b6000602082840312156143ba57600080fd5b5035919050565b80516001600160a01b0316825260208101516143e2602084018260020b9052565b5060408101516143f7604084018260020b9052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201516144538285018280518252602090810151910152565b50506101408101516101606144748185018380518252602090810151910152565b8201516101a08401525061018001516101c090910152565b815181526020808301516105008301916144b0908401826001600160a01b03169052565b5060408301516144cb60408401826001600160a01b03169052565b5060608301516144fb606084018280518252602081015160020b6020830152604081015160020b60408301525050565b50608083015161455760c0840182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b5060a083015161456b6101c08401826143c1565b5060c083015115156103a083015260e083015180516103c08401526020808201516103e085015260408083015161040086015260609283015161042086015261010086015180516104408701529182015161046086015281015161048085015201516104a08301526101208301516104c0830152610140909201516104e09091015290565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614628576146286145f0565b60405290565b604051606081016001600160401b0381118282101715614628576146286145f0565b604051608081016001600160401b0381118282101715614628576146286145f0565b60405160c081016001600160401b0381118282101715614628576146286145f0565b60405161010081016001600160401b0381118282101715614628576146286145f0565b604051601f8201601f191681016001600160401b03811182821017156146df576146df6145f0565b604052919050565b8015158114610d5257600080fd5b8035610cc8816146e7565b600082601f83011261471157600080fd5b81356001600160401b0381111561472a5761472a6145f0565b61473d601f8201601f19166020016146b7565b81815284602083860101111561475257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561478457600080fd5b833592506020840135915060408401356001600160401b03808211156147a957600080fd5b9085019060e082880312156147bd57600080fd5b6147c5614606565b82358152602083013560208201526040830135604082015260608301356060820152608083013560808201526147fd60a084016146f5565b60a082015260c08301358281111561481457600080fd5b61482089828601614700565b60c0830152508093505050509250925092565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301525050565b6101008101610c0c8284614833565b60208082528251828201528281015160408084015280516060840181905260009291820190839060808601905b808310156148e057835182529284019260019290920191908401906148c0565b509695505050505050565b8051805183526020908101518184015281015161494a6040840182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b50604081015180516101208401526020908101516101408401526060820151805161016085015201516101808301526080810151600290810b6101a084015260a0820151900b6101c083015260c08101516101e083015260e0015161020090910152565b600060e083018251845260208084015115158186015260408085015181870152606080860151818801526080860151608088015260a086015160a088015260c086015160e060c08901528481518087526101008a0191508583019650600092505b80831015614a585786518051835286810151614a2d888501826148eb565b5080860151610240840152840151610260830152958501956001929092019161028090910190614a0f565b5098975050505050505050565b604081526000614a7860408301856149ae565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015614ac857601f19878403018552614ab68383516149ae565b94860194925090850190600101614a9a565b50909998505050505050505050565b82815261012081016108ad6020830184614833565b6020815260006108ad60208301846149ae565b600080600083850360a0811215614b1557600080fd5b84359350602085013592506060603f1982011215614b3257600080fd5b50614b3b61462e565b604085013581526060850135602082015260808501356040820152809150509250925092565b60008060408385031215614b7457600080fd5b50508035926020909101359150565b6001600160a01b0381168114610d5257600080fd5b600060808284031215614baa57600080fd5b614bb2614650565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b60006001600160401b03821115614bf557614bf56145f0565b5060051b60200190565b8060020b8114610d5257600080fd5b600060608284031215614c2057600080fd5b614c2861462e565b9050813581526020820135614c3c81614bff565b60208201526040820135614c4f81614bff565b604082015292915050565b600080600060c08486031215614c6f57600080fd5b8335614c7a81614b83565b92506020614c8a86868301614b98565b925060a08501356001600160401b03811115614ca557600080fd5b8501601f81018713614cb657600080fd5b8035614cc9614cc482614bdc565b6146b7565b818152610180918202830184019184820191908a841115614ce957600080fd5b938501935b83851015614d5f5780858c031215614d065760008081fd5b614d0e614650565b8535614d1981614b83565b8152614d278c878901614c0e565b87820152614d388c60808801614b98565b6040820152614d4b8c6101008801614b98565b606082015283529384019391850191614cee565b5080955050505050509250925092565b60008060808385031215614d8257600080fd5b82359150614d938460208501614c0e565b90509250929050565b6020808252825182820152828101516001600160a01b0316604080840191909152830151606080840191909152830151608080840152805160a0840181905260009291820190839060c08601905b808310156148e057835180518352850151614e07868401826148eb565b50610240820191508484019350600183019250614dea565b60008060006101208486031215614e3557600080fd5b83359250614e468560208601614b98565b9150614e558560a08601614b98565b90509250925092565b600060208284031215614e7057600080fd5b81356108ad81614b83565b60008083601f840112614e8d57600080fd5b5081356001600160401b03811115614ea457600080fd5b60208301915083602082850101111561219457600080fd5b60008060008060608587031215614ed257600080fd5b843593506020850135925060408501356001600160401b03811115614ef657600080fd5b614f0287828801614e7b565b95989497509550505050565b8051610cc8816146e7565b60008060408385031215614f2c57600080fd5b8251614f37816146e7565b6020939093015192949293505050565b60005b83811015614f62578181015183820152602001614f4a565b50506000910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a0830152600060c082015160e060c085015280518060e0860152610100614fcc8282880160208601614f47565b80601f19601f840116870101935050505092915050565b85815284602082015283604082015282606082015260a06080820152600061500e60a0830184614f6b565b979650505050505050565b600081830361010081121561502d57600080fd5b61503561462e565b60c082121561504357600080fd5b61504b614672565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e08401516040820152809250505092915050565b634e487b7160e01b600052603260045260246000fd5b6000604082840312156150cd57600080fd5b604051604081018181106001600160401b03821117156150ef576150ef6145f0565b604052825181526020928301519281019290925250919050565b600060e0828403121561511b57600080fd5b615123614606565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015292915050565b8051610cc881614bff565b600082601f83011261518757600080fd5b81516020615197614cc483614bdc565b82815261028092830285018201928282019190878511156151b757600080fd5b8387015b858110156152aa57808903828112156151d45760008081fd5b6151dc614650565b8251815261022080601f19840112156151f55760008081fd5b6151fd614694565b925061520b8c8986016150bb565b8352606061521b8d828701615109565b8985015261522d8d61014087016150bb565b604081818701526152428f61018089016150bb565b838701526152536101c0880161516b565b60808701526152656101e0880161516b565b60a087015261020087015160c08701529286015160e08601525082890193909352610240840151908201526102608301519181019190915284529284019281016151bb565b5090979650505050505050565b6000602082840312156152c957600080fd5b81516001600160401b03808211156152e057600080fd5b9083019060e082860312156152f457600080fd5b6152fc614606565b8251815261530c60208401614f0e565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c08301518281111561534b57600080fd5b61535787828601615176565b60c08301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161538e5761538e615366565b5060010190565b8154815260018201546001600160a01b039081166020830152600280840154909116604083015260038301546060830152600483015480820b608084015260181c900b60a0820152600582015460c0820152600682015460e0820152600782015461010082015260088201546101208201526009820154610140820152600a820154610160820152600b820154610180820152600c8201546101a082015261050081016154ee6101c08301600d850180546001600160a01b038116835260a081901c60020b602084015260b881901c60020b6040840152506001810154606083015260028101546080830152600381015460a0830152600481015460c0830152600581015460e08301526006810154610100830152600781015461012083015260088101546101408301526009810154610160830152600a810154610180830152600b8101546101a0830152600c01546101c090910152565b601a83015460ff1615156103a0830152601b8301546103c0830152601c8301546103e0830152601d830154610400830152601e830154610420830152601f8301546104408301526020830154610460830152602183015461048083015260228301546104a083015260238301546104c08301526024909201546104e09091015290565b6000806040838503121561558457600080fd5b505080516020909101519092909150565b8781528660208201528560408201528460608201528360808201528260a082015260e060c082015260006155cc60e0830184614f6b565b9998505050505050505050565b6000602082840312156155eb57600080fd5b5051919050565b602080825260029082015261433160f01b604082015260600190565b81810381811115610c0c57610c0c615366565b828152608081016108ad602083018480518252602081015160020b6020830152604081015160020b60408301525050565b83815261012081016156886020830185805182526020810151602083015260408101516040830152606081015160608301525050565b825160a0830152602083015160c0830152604083015160e083015260608301516101008301526124a8565b600080604083850312156156c657600080fd5b8251915060208301516156d8816146e7565b809150509250929050565b6000602082840312156156f557600080fd5b81516108ad81614b83565b6000806040838503121561571357600080fd5b82516001600160401b0381111561572957600080fd5b8301601f8101851361573a57600080fd5b8051602061574a614cc483614bdc565b82815260059290921b8301810191818101908884111561576957600080fd5b938201935b838510156157875784518252938201939082019061576e565b95506157969050868201614f0e565b93505050509250929050565b805161ffff81168114610cc857600080fd5b600080600080600080600060e0888a0312156157cf57600080fd5b87516157da81614b83565b60208901519097506157eb81614bff565b95506157f9604089016157a2565b9450615807606089016157a2565b9350615815608089016157a2565b925060a088015160ff8116811461582b57600080fd5b60c089015190925061583c816146e7565b8091505092959891949750929550565b634e487b7160e01b600052601260045260246000fd5b6000826158715761587161584c565b500490565b602080825260029082015261563160f01b604082015260600190565b80820180821115610c0c57610c0c615366565b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156152aa578451835293830193918301916001016158ca565b600082516158f8818460208701614f47565b9190910192915050565b60006020828403121561591457600080fd5b81516108ad816146e7565b634e487b7160e01b600052603160045260246000fd5b60008160020b627fffff19810361594e5761594e615366565b60000392915050565b6020808252825182820181905260009190848201906040850190845b8181101561599557835163ffffffff1683529284019291840191600101615973565b50909695505050505050565b61ffff818116838216019080821115612be357612be3615366565b600061ffff808416806159d1576159d161584c565b92169190910692915050565b8051600681900b8114610cc857600080fd5b60008060008060808587031215615a0557600080fd5b845163ffffffff81168114615a1957600080fd5b9350615a27602086016159dd565b92506040850151615a3781614b83565b6060860151909250615a48816146e7565b939692955090935050565b60006020808385031215615a6657600080fd5b82516001600160401b03811115615a7c57600080fd5b8301601f81018513615a8d57600080fd5b8051615a9b614cc482614bdc565b81815260059190911b82018301908381019087831115615aba57600080fd5b928401925b8284101561500e57615ad0846159dd565b82529284019290840190615abf565b600682810b9082900b03667fffffffffffff198112667fffffffffffff82131715610c0c57610c0c615366565b60008160060b8360060b80615b2357615b2361584c565b667fffffffffffff19821460001982141615615b4157615b41615366565b9005939250505056fea2646970667358221220b86de081f8c1b71c0192ca13f25beeab1856185649912668459aeb5e59dd898964736f6c63430008130033'

type ControllerConstructorParams =
  | [linkLibraryAddresses: ControllerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(
        _abi,
        Controller__factory.linkBytecode(linkLibraryAddresses),
        signer
      )
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ControllerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$7a0b87ce898fe502b2df3b643e5d7fb9ba\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/ApplyInterestLogic.sol:ApplyInterestLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$bc9f384c073b2381249378965b2d698cf3\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/TradeLogic.sol:TradeLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$4278c074fd6acd31e7e5f642d169fef5d3\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/ReaderLogic.sol:ReaderLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$1f4d3c4bb88e02f5b45caa05c79da92b33\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/UpdateMarginLogic.sol:UpdateMarginLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$e2217eb696a5c09092bdef553420bd7ff4\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/IsolatedVaultLogic.sol:IsolatedVaultLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$22e71cc2a9e9de4b2967c224ed91c7d01e\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/SupplyLogic.sol:SupplyLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$a1fa80d38d689cae49e54718da49b6432c\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/LiquidationLogic.sol:LiquidationLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$7046bc99c44940d8afdd1f5826a68a8b5f\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/SettleUserFeeLogic.sol:SettleUserFeeLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    return linkedBytecode
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Controller {
    return super.attach(address) as Controller
  }
  connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller
  }
}

export interface ControllerLibraryAddresses {
  ['src/libraries/logic/ApplyInterestLogic.sol:ApplyInterestLogic']: string
  ['src/libraries/logic/TradeLogic.sol:TradeLogic']: string
  ['src/libraries/logic/ReaderLogic.sol:ReaderLogic']: string
  ['src/libraries/logic/UpdateMarginLogic.sol:UpdateMarginLogic']: string
  ['src/libraries/logic/IsolatedVaultLogic.sol:IsolatedVaultLogic']: string
  ['src/libraries/logic/SupplyLogic.sol:SupplyLogic']: string
  ['src/libraries/logic/LiquidationLogic.sol:LiquidationLogic']: string
  ['src/libraries/logic/SettleUserFeeLogic.sol:SettleUserFeeLogic']: string
}