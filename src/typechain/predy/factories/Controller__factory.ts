/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Controller, ControllerInterface } from '../Controller'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'T',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8'
      }
    ],
    name: 'Initialized',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'liquidator',
        type: 'address'
      }
    ],
    name: 'LiquidatorUpdated',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address'
      }
    ],
    name: 'OperatorUpdated',
    type: 'event'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'pairGroupId',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'uniswapPool',
            type: 'address'
          },
          {
            internalType: 'bool',
            name: 'isIsolatedMode',
            type: 'bool'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'assetRiskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'stableIrmParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'baseRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'kinkRate',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope1',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'slope2',
                type: 'uint256'
              }
            ],
            internalType: 'struct InterestRateModel.IRMParams',
            name: 'underlyingIrmParams',
            type: 'tuple'
          }
        ],
        internalType: 'struct DataType.AddPairParams',
        name: '_addPairParam',
        type: 'tuple'
      }
    ],
    name: 'addPair',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stableAssetAddress',
        type: 'address'
      },
      {
        internalType: 'uint8',
        name: '_marginRounder',
        type: 'uint8'
      }
    ],
    name: 'addPairGroup',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'allowedUniswapPools',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint64',
        name: '_pairId',
        type: 'uint64'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'enableCallback',
            type: 'bool'
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes'
          }
        ],
        internalType: 'struct TradePerpLogic.TradeParams',
        name: '_tradeParams',
        type: 'tuple'
      },
      {
        internalType: 'uint256',
        name: '_withdrawAmount',
        type: 'uint256'
      }
    ],
    name: 'closeIsolatedPosition',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getAsset',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'pairGroupId',
            type: 'uint256'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'supplyTokenAddress',
                type: 'address'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'totalCompoundDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalBorrowed',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetScaler',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetGrowth',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'debtGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.TokenStatus',
                name: 'tokenStatus',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'baseRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'kinkRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope1',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope2',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct InterestRateModel.IRMParams',
                name: 'irmParams',
                type: 'tuple'
              }
            ],
            internalType: 'struct DataType.AssetPoolStatus',
            name: 'stablePool',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'supplyTokenAddress',
                type: 'address'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'totalCompoundDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalBorrowed',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetScaler',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetGrowth',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'debtGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.TokenStatus',
                name: 'tokenStatus',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'baseRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'kinkRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope1',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope2',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct InterestRateModel.IRMParams',
                name: 'irmParams',
                type: 'tuple'
              }
            ],
            internalType: 'struct DataType.AssetPoolStatus',
            name: 'underlyingPool',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'riskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'uniswapPool',
                type: 'address'
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint64',
                name: 'numRebalance',
                type: 'uint64'
              },
              {
                internalType: 'uint256',
                name: 'totalAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowedAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastRebalanceTotalSquartAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastFee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastFee1Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremium0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremium1Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee1Growth',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionUnderlying',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionStable',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthStable',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.SqrtPerpAssetStatus',
            name: 'sqrtAssetStatus',
            type: 'tuple'
          },
          {
            internalType: 'bool',
            name: 'isMarginZero',
            type: 'bool'
          },
          {
            internalType: 'bool',
            name: 'isIsolatedMode',
            type: 'bool'
          },
          {
            internalType: 'uint256',
            name: 'lastUpdateTimestamp',
            type: 'uint256'
          }
        ],
        internalType: 'struct DataType.PairStatus',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getLatestAssetStatus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'pairGroupId',
            type: 'uint256'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'supplyTokenAddress',
                type: 'address'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'totalCompoundDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalBorrowed',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetScaler',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetGrowth',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'debtGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.TokenStatus',
                name: 'tokenStatus',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'baseRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'kinkRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope1',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope2',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct InterestRateModel.IRMParams',
                name: 'irmParams',
                type: 'tuple'
              }
            ],
            internalType: 'struct DataType.AssetPoolStatus',
            name: 'stablePool',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'supplyTokenAddress',
                type: 'address'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'totalCompoundDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalDeposited',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalNormalBorrowed',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetScaler',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'assetGrowth',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'debtGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.TokenStatus',
                name: 'tokenStatus',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'baseRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'kinkRate',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope1',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'slope2',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct InterestRateModel.IRMParams',
                name: 'irmParams',
                type: 'tuple'
              }
            ],
            internalType: 'struct DataType.AssetPoolStatus',
            name: 'underlyingPool',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'riskRatio',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rangeSize',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceThreshold',
                type: 'int24'
              }
            ],
            internalType: 'struct DataType.AssetRiskParams',
            name: 'riskParams',
            type: 'tuple'
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'uniswapPool',
                type: 'address'
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint64',
                name: 'numRebalance',
                type: 'uint64'
              },
              {
                internalType: 'uint256',
                name: 'totalAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowedAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastRebalanceTotalSquartAmount',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastFee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'lastFee1Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremium0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'borrowPremium1Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee0Growth',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'fee1Growth',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionUnderlying',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'rebalancePositionStable',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'rebalanceFeeGrowthStable',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.SqrtPerpAssetStatus',
            name: 'sqrtAssetStatus',
            type: 'tuple'
          },
          {
            internalType: 'bool',
            name: 'isMarginZero',
            type: 'bool'
          },
          {
            internalType: 'bool',
            name: 'isIsolatedMode',
            type: 'bool'
          },
          {
            internalType: 'uint256',
            name: 'lastUpdateTimestamp',
            type: 'uint256'
          }
        ],
        internalType: 'struct DataType.PairStatus',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getPairGroup',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'stableTokenAddress',
            type: 'address'
          },
          {
            internalType: 'uint8',
            name: 'marginRoundedDecimal',
            type: 'uint8'
          }
        ],
        internalType: 'struct DataType.PairGroup',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256'
      }
    ],
    name: 'getSqrtIndexPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: '',
        type: 'uint160'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256'
      }
    ],
    name: 'getSqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: '',
        type: 'uint160'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'pairGroupId',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'bool',
            name: 'autoTransferDisabled',
            type: 'bool'
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'pairId',
                type: 'uint64'
              },
              {
                internalType: 'int24',
                name: 'rebalanceLastTickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceLastTickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint64',
                name: 'lastNumRebalance',
                type: 'uint64'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'amount',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'entryValue',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.PositionStatus',
                name: 'perp',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'amount',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'entryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'stableRebalanceEntryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'underlyingRebalanceEntryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'entryTradeFee0',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'entryTradeFee1',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct Perp.SqrtPositionStatus',
                name: 'sqrtPerp',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'underlying',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'stable',
                type: 'tuple'
              }
            ],
            internalType: 'struct Perp.UserStatus[]',
            name: 'openPositions',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.Vault',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      }
    ],
    name: 'getVaultStatus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'pairId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'uint64',
                    name: 'pairId',
                    type: 'uint64'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'uint64',
                    name: 'lastNumRebalance',
                    type: 'uint64'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairGroupId',
        type: 'uint256'
      }
    ],
    name: 'getVaultStatusWithAddress',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'pairId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'uint64',
                    name: 'pairId',
                    type: 'uint64'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'uint64',
                    name: 'lastNumRebalance',
                    type: 'uint64'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult',
        name: '',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'positionValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'pairId',
                type: 'uint256'
              },
              {
                components: [
                  {
                    internalType: 'uint64',
                    name: 'pairId',
                    type: 'uint64'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickLower',
                    type: 'int24'
                  },
                  {
                    internalType: 'int24',
                    name: 'rebalanceLastTickUpper',
                    type: 'int24'
                  },
                  {
                    internalType: 'uint64',
                    name: 'lastNumRebalance',
                    type: 'uint64'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      }
                    ],
                    internalType: 'struct Perp.PositionStatus',
                    name: 'perp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'amount',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'entryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'stableRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'int256',
                        name: 'underlyingRebalanceEntryValue',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee0',
                        type: 'uint256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'entryTradeFee1',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct Perp.SqrtPositionStatus',
                    name: 'sqrtPerp',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'underlying',
                    type: 'tuple'
                  },
                  {
                    components: [
                      {
                        internalType: 'int256',
                        name: 'positionAmount',
                        type: 'int256'
                      },
                      {
                        internalType: 'uint256',
                        name: 'lastFeeGrowth',
                        type: 'uint256'
                      }
                    ],
                    internalType: 'struct ScaledAsset.UserStatus',
                    name: 'stable',
                    type: 'tuple'
                  }
                ],
                internalType: 'struct Perp.UserStatus',
                name: 'position',
                type: 'tuple'
              },
              {
                internalType: 'int256',
                name: 'delta',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'unrealizedFee',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.SubVaultStatusResult[]',
            name: 'subVaults',
            type: 'tuple[]'
          }
        ],
        internalType: 'struct DataType.VaultStatusResult[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'globalData',
    outputs: [
      {
        internalType: 'uint256',
        name: 'pairGroupsCount',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'pairsCount',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'vaultCount',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_closeRatio',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_sqrtSlippageTolerance',
        type: 'uint256'
      }
    ],
    name: 'liquidationCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'liquidator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint64',
        name: '_pairId',
        type: 'uint64'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'enableCallback',
            type: 'bool'
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes'
          }
        ],
        internalType: 'struct TradePerpLogic.TradeParams',
        name: '_tradeParams',
        type: 'tuple'
      },
      {
        internalType: 'uint256',
        name: '_depositAmount',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: '_revertOnDupPair',
        type: 'bool'
      }
    ],
    name: 'openIsolatedPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: 'isolatedVaultId',
        type: 'uint256'
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairId',
        type: 'uint256'
      }
    ],
    name: 'reallocate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_isolatedVaultId',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: '_autoTransferDisabled',
        type: 'bool'
      }
    ],
    name: 'setAutoTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newLiquidator',
        type: 'address'
      }
    ],
    name: 'setLiquidator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address'
      }
    ],
    name: 'setOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: '_isStable',
        type: 'bool'
      }
    ],
    name: 'supplyToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalMintAmount',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint64',
        name: '_pairId',
        type: 'uint64'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'lowerSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'upperSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'bool',
            name: 'enableCallback',
            type: 'bool'
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes'
          }
        ],
        internalType: 'struct TradePerpLogic.TradeParams',
        name: '_tradeParams',
        type: 'tuple'
      }
    ],
    name: 'tradePerp',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct Perp.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minDeposit',
            type: 'int256'
          }
        ],
        internalType: 'struct DataType.TradeResult',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount0',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amount1',
        type: 'uint256'
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes'
      }
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256'
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes'
      }
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'riskRatio',
            type: 'uint256'
          },
          {
            internalType: 'int24',
            name: 'rangeSize',
            type: 'int24'
          },
          {
            internalType: 'int24',
            name: 'rebalanceThreshold',
            type: 'int24'
          }
        ],
        internalType: 'struct DataType.AssetRiskParams',
        name: '_riskParams',
        type: 'tuple'
      },
      {
        internalType: 'bool',
        name: '_changeToIsolatedMode',
        type: 'bool'
      }
    ],
    name: 'updateAssetRiskParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        internalType: 'struct InterestRateModel.IRMParams',
        name: '_stableIrmParams',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'baseRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'kinkRate',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope1',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'slope2',
            type: 'uint256'
          }
        ],
        internalType: 'struct InterestRateModel.IRMParams',
        name: '_underlyingIrmParams',
        type: 'tuple'
      }
    ],
    name: 'updateIRMParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_pairGroupId',
        type: 'uint64'
      },
      {
        internalType: 'int256',
        name: '_marginAmount',
        type: 'int256'
      }
    ],
    name: 'updateMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_pairGroupId',
        type: 'uint64'
      },
      {
        internalType: 'uint256',
        name: '_isolatedVaultId',
        type: 'uint256'
      },
      {
        internalType: 'int256',
        name: '_marginAmount',
        type: 'int256'
      },
      {
        internalType: 'bool',
        name: '_moveFromMainVault',
        type: 'bool'
      }
    ],
    name: 'updateMarginOfIsolated',
    outputs: [
      {
        internalType: 'uint256',
        name: 'isolatedVaultId',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'vaultCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pairId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: '_isStable',
        type: 'bool'
      }
    ],
    name: 'withdrawToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalBurnAmount',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'finalWithdrawAmount',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506001805561480e806100246000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638060c9a11161010f578063b3ab15fb116100a2578063d65dd74c11610071578063d65dd74c14610528578063eac8f5b814610550578063f3eb8cd814610563578063fa461e331461059657600080fd5b8063b3ab15fb146104c0578063c1dd9019146104d3578063ca1407f8146104f4578063d34879971461051557600080fd5b806395be76a2116100de57806395be76a21461047f578063a7c6a10014610492578063ab64c8e81461049a578063acfcd9fd146104ad57600080fd5b80638060c9a1146104315780638129fc1c146104445780638f3231901461044c5780639403b6341461045f57600080fd5b806349ebb77d11610187578063613ce41011610156578063613ce410146103be578063724a1b4e146103eb5780637a1b9a9b146103fe5780637a2b78d61461041e57600080fd5b806349ebb77d146102e25780635084a28014610302578063570ca735146103985780635c832098146103ab57600080fd5b806318e80749116101c357806318e807491461027e578063240c6410146102a95780632d3c7f36146102bc5780634046ebae146102cf57600080fd5b806301c76f81146101f557806307159aec1461020a5780630a69453a146102335780630fe433db14610254575b600080fd5b610208610203366004612d78565b6105a9565b005b61021d610218366004612d95565b610644565b60405161022a9190612f3d565b60405180910390f35b6102466102413660046131da565b6106ce565b60405190815260200161022a565b610267610262366004612d95565b61077e565b60408051921515835260208301919091520161022a565b61029161028c366004612d95565b610806565b6040516001600160a01b03909116815260200161022a565b6102086102b736600461325d565b610848565b6102466102ca366004613289565b6108f6565b600b54610291906001600160a01b031681565b6102f56102f0366004612d95565b61099c565b60405161022a9190613438565b61036a610310366004612d95565b60408051606080820183526000808352602080840182905292840181905293845260058252928290208251938401835280548452600101546001600160a01b03811691840191909152600160a01b900460ff169082015290565b60408051825181526020808401516001600160a01b0316908201529181015160ff169082015260600161022a565b600a54610291906001600160a01b031681565b6102086103b936600461344b565b610a35565b6002546003546004546103d092919083565b6040805193845260208401929092529082015260600161022a565b6102466103f9366004613496565b610add565b61041161040c3660046135d9565b610b93565b60405161022a919061368a565b61041161042c366004613699565b610cf6565b61024661043f366004613700565b610d86565b610208610e3f565b61024661045a366004613739565b610fb9565b61047261046d366004612d95565b611058565b60405161022a9190613765565b61020861048d3660046137fe565b611238565b600454610246565b6102086104a836600461383d565b6112ab565b6102916104bb366004612d95565b61146c565b6102086104ce366004612d78565b611494565b6104e66104e1366004612d95565b61151f565b60405161022a929190613862565b6105076105023660046138d4565b611680565b60405161022a92919061394b565b6102086105233660046139a1565b6118c9565b61053b610536366004613289565b6119d1565b6040805192835260208301919091520161022a565b61021d61055e366004612d95565b611a7a565b610586610571366004612d78565b600c6020526000908152604090205460ff1681565b604051901515815260200161022a565b6102086105a43660046139a1565b611d43565b600a546001600160a01b031633146105dc5760405162461bcd60e51b81526004016105d3906139f3565b60405180910390fd5b6001600160a01b0381166105ef57600080fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f82d2860e9f6296845ec2615b720571f4ac80342692d4396a1decf505bfc063b3906020015b60405180910390a150565b61064c612b07565b60405163bc9580bf60e01b8152600260048201526024810183905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063bc9580bf9060440161066060405180830381865af41580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190613cbe565b92915050565b600a546000906001600160a01b031633146106fb5760405162461bcd60e51b81526004016105d3906139f3565b6040516397bebce960e01b815273__$95910b7b93a5208ca27f4262a74795a535$__906397bebce99061073890600290600c908790600401613d6a565b602060405180830381865af4158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190613e37565b919050565b60405163161f2aeb60e31b81526002600482015260248101829052600090819073__$82e740bfb21403018c74028207d6b78a82$__9063b0f95758906044016040805180830381865af41580156107d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fd9190613e50565b91509150915091565b6000818152600660205260408120601c01546106c89061082e906001600160a01b0316611df4565b6000848152600660205260409020602d015460ff16611e65565b610850611e92565b600b546001600160a01b0316331480610867575080155b61087057600080fd5b604051635269600d60e11b81526002600482015260248101849052604481018390526064810182905273__$a1fa80d38d689cae49e54718da49b6432c$__9063a4d2c01a9060840160006040518083038186803b1580156108d057600080fd5b505af41580156108e4573d6000803e3d6000fd5b505050506108f160018055565b505050565b6000610900611e92565b60405163aa1e262b60e01b8152600260048201526024810185905260448101849052821515606482015273__$22e71cc2a9e9de4b2967c224ed91c7d01e$__9063aa1e262b90608401602060405180830381865af4158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190613e37565b905061099560018055565b9392505050565b6109a4612b7e565b6000828152600860205260409081902090516316c6a23f60e21b815273__$4278c074fd6acd31e7e5f642d169fef5d3$__90635b1a88fc906109f0906006906007908690600401613f74565b600060405180830381865af4158015610a0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610995919081019061405f565b600a546001600160a01b03163314610a5f5760405162461bcd60e51b81526004016105d3906139f3565b600083815260066020526040908190209051639fc70ca160e01b815273__$95910b7b93a5208ca27f4262a74795a535$__91639fc70ca191610aa8919086908690600401614236565b60006040518083038186803b158015610ac057600080fd5b505af4158015610ad4573d6000803e3d6000fd5b50505050505050565b6000610ae7611e92565b604051631c3af86960e31b8152600260048201526001600160401b03861660248201526044810185905260648101849052821515608482015273__$1f4d3c4bb88e02f5b45caa05c79da92b33$__9063e1d7c3489060a401602060405180830381865af4158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190613e37565b9050610b8b60018055565b949350505050565b610b9b612bb4565b610ba3611e92565b6001600160401b03841660009081526006602052604090819020600101549051631e7931bf60e01b815273__$0b623280e191457df753735b6fc86de420$__90631e7931bf90610bfe906002908a908a908a9060040161429b565b61010060405180830381865af4158015610c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c40919061433c565b915073__$1f4d3c4bb88e02f5b45caa05c79da92b33$__63e1d7c34860028389610c6988611eeb565b610c72906143de565b6040516001600160e01b031960e087901b16815260048101949094526024840192909252604483015260648201526001608482015260a401602060405180830381865af4158015610cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ceb9190613e37565b5050610b8b60018055565b610cfe612bb4565b610d06611e92565b604051631e7931bf60e01b815273__$0b623280e191457df753735b6fc86de420$__90631e7931bf90610d449060029088908890889060040161429b565b61010060405180830381865af4158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061433c565b600a546000906001600160a01b03163314610db35760405162461bcd60e51b81526004016105d3906139f3565b60405163e467935960e01b8152600260048201526001600160a01b038416602482015260ff8316604482015273__$95910b7b93a5208ca27f4262a74795a535$__9063e467935990606401602060405180830381865af4158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190613e37565b600054610100900460ff1615808015610e5f5750600054600160ff909116105b80610e795750303b158015610e79575060005460ff166001145b610edc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d3565b6000805460ff191660011790558015610eff576000805461ff0019166101001790555b600a80546001600160a01b0319163317905560405163084e83a360e11b81526002600482015273__$95910b7b93a5208ca27f4262a74795a535$__9063109d07469060240160006040518083038186803b158015610f5c57600080fd5b505af4158015610f70573d6000803e3d6000fd5b505050508015610fb6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610639565b50565b6000610fc3611e92565b604051636ef4d9c760e01b8152600260048201526001600160401b03841660248201526044810183905273__$1f4d3c4bb88e02f5b45caa05c79da92b33$__90636ef4d9c790606401602060405180830381865af4158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190613e37565b90506106c860018055565b61109c6040518060c00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600015158152602001606081525090565b6000828152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b03168184015260038201546060820152600482015460ff16151560808201526005820180548451818702810187019095528085529195929460a0870194939192919084015b8282101561122a5760008481526020908190206040805161010081018252600d860290920180546001600160401b038082168552600160401b8204600290810b86880152600160581b8304810b86860152600160701b909204166060808601919091528351808501855260018085015482529284015481880152608080870191909152845160c08082018752600386015482526004860154828a0152600586015482880152600686015493820193909352600785015491810191909152600884015460a0828101919091528601528351808501855260098401548152600a84015481880152908501528251808401909352600b8201548352600c909101548285015260e08301919091529083529092019101611113565b505050915250909392505050565b600a546001600160a01b031633146112625760405162461bcd60e51b81526004016105d3906139f3565b600083815260066020526040908190209051631a9cd26b60e01b815273__$95910b7b93a5208ca27f4262a74795a535$__91631a9cd26b91610aa89190869086906004016143fa565b6000828152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b03168184015260038201546060820152600482015460ff1615156080820152600582018054845181870281018701909552808552611449969295939460a087019490939084015b8282101561143b5760008481526020908190206040805161010081018252600d860290920180546001600160401b038082168552600160401b8204600290810b86880152600160581b8304810b86860152600160701b909204166060808601919091528351808501855260018085015482529284015481880152608080870191909152845160c08082018752600386015482526004860154828a0152600586015482880152600686015493820193909352600785015491810191909152600884015460a0828101919091528601528351808501855260098401548152600a84015481880152908501528251808401909352600b8201548352600c909101548285015260e08301919091529083529092019101611324565b505050508152505033611f59565b600091825260086020526040909120600401805460ff1916911515919091179055565b6000818152600660205260408120601c01546106c89061082e906001600160a01b0316611fa7565b600a546001600160a01b031633146114be5760405162461bcd60e51b81526004016105d3906139f3565b6001600160a01b0381166114d157600080fd5b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec490602001610639565b611527612b7e565b33600090815260096020908152604080832085845282528083208151808301835281548152600182018054845181870281018701909552808552606096959294858401939092919083018282801561159e57602002820191906000526020600020905b81548152602001906001019080831161158a575b505050505081525050905060008160200151516001600160401b038111156115c8576115c8612fe5565b60405190808252806020026020018201604052801561160157816020015b6115ee612b7e565b8152602001906001900390816115e65790505b50905060005b82602001515181101561166a5761163a8360200151828151811061162d5761162d61445b565b602002602001015161099c565b82828151811061164c5761164c61445b565b6020026020010181905250808061166290614471565b915050611607565b5081516116769061099c565b9590945092505050565b600061168a612bb4565b611692611e92565b6001600160401b03861660009081526006602052604090206001015483158061174b57503360009081526009602090815260408083208484528252918290208251808401845281548152600182018054855181860281018601909652808652611749956002959394938581019391929083018282801561173157602002820191906000526020600020905b81548152602001906001019080831161171d575b505050505081525050896001600160401b0316611fbc565b155b6117825760405162461bcd60e51b8152602060048201526008602482015267222aa82fa820a4a960c11b60448201526064016105d3565b841561182f5773__$1f4d3c4bb88e02f5b45caa05c79da92b33$__63e1d7c3486002838b6117af8a611eeb565b6040516001600160e01b031960e087901b16815260048101949094526024840192909252604483015260648201526001608482015260a401602060405180830381865af4158015611804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118289190613e37565b9250611833565b8792505b604051631e7931bf60e01b815273__$0b623280e191457df753735b6fc86de420$__90631e7931bf906118719060029087908c908c9060040161429b565b61010060405180830381865af415801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b3919061433c565b9150506118bf60018055565b9550959350505050565b336000908152600c602052604090205460ff166118e557600080fd5b33841561195857611958816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561192d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611951919061448a565b3387612217565b83156119ca576119ca816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c3919061448a565b3386612217565b5050505050565b6000806119dc611e92565b604051634bf8f12560e01b8152600260048201526024810186905260448101859052831515606482015273__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90634bf8f125906084016040805180830381865af4158015611a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6591906144a7565b91509150611a7260018055565b935093915050565b611a82612b07565b5060009081526006602081815260409283902083516101208082018652825482526001830154828501528551608080820188526002858101546001600160a01b0390811684526003870154811684890152895160c08082018c52600489015482526005890154828b015299880154818c01526007880154606080830191909152600889015482860152600989015460a080840191909152868d01929092528b518086018d52600a8a01548152600b8a0154818c0152600c8a0154818e0152600d8a01548183015281870152878c01959095528a518085018c52600e89015483168152600f8901548316818b01528b51808c018d5260108a0154815260118a0154818c015260128a0154818e015260138a01548188015260148a01548187015260158a015481840152818d01528b518086018d5260168a0154815260178a0154818c015260188a0154818e015260198a01548188015281870152858801528a518086018c52601a8901548152601b89015480850b828c015263010000009004840b818d0152848801528a5161022081018c52601c8901549283168152600160a01b8304840b818b0152600160b81b90920490920b818b0152601d8701546001600160401b031693810193909352601e86015491830191909152601f850154828201528486015482880152602185015460e0808401919091526022860154610100848101919091526023870154948401949094526024860154610140840152602586015461016084015260268601546101808401528851808a018a52602787015481526028870154818901526101a08401528851808a0190995260298601548952602a860154968901969096526101c0820197909752602b8401546101e0820152602c84015461020082015295820195909552602d82015460ff808216151595830195909552859004909316151591830191909152602e01549181019190915290565b336000908152600c602052604090205460ff16611d5f57600080fd5b336000851315611daa57611daa816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561192d573d6000803e3d6000fd5b60008413156119ca576119ca816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561199f573d6000803e3d6000fd5b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5891906144dd565b5094979650505050505050565b60008115611e8b57611e846001600160a01b038416600160c01b614585565b90506106c8565b50816106c8565b600260015403611ee45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d3565b6002600155565b60006001600160ff1b03821115611f555760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016105d3565b5090565b806001600160a01b031682604001516001600160a01b031614611fa35760405162461bcd60e51b81526020600482015260026024820152612b1960f11b60448201526064016105d3565b5050565b6000611fb582610708612310565b5092915050565b6000805b83602001515181101561220c57600085600601600086602001518481518110611feb57611feb61445b565b60209081029190910181015182528181019290925260409081016000908120825160c0810184528154815260018201548186015260028201546001600160a01b03168185015260038201546060820152600482015460ff16151560808201526005820180548551818802810188019096528086529195929460a0870194909391929184015b828210156121875760008481526020908190206040805161010081018252600d860290920180546001600160401b038082168552600160401b8204600290810b86880152600160581b8304810b86860152600160701b909204166060808601919091528351808501855260018085015482529284015481880152608080870191909152845160c08082018752600386015482526004860154828a0152600586015482880152600686015493820193909352600785015491810191909152600884015460a0828101919091528601528351808501855260098401548152600a84015481880152908501528251808401909352600b8201548352600c909101548285015260e08301919091529083529092019101612070565b5050505081525050905060005b8160a00151518110156121f75760008260a0015182815181106121b9576121b961445b565b602002602001015190508581600001516001600160401b0316036121e4576001945050505050610995565b50806121ef81614471565b915050612194565b5050808061220490614471565b915050611fc0565b506000949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916122739190614599565b6000604051808303816000865af19150503d80600081146122b0576040519150601f19603f3d011682016040523d82523d6000602084013e6122b5565b606091505b50915091508180156122df5750805115806122df5750808060200190518101906122df91906145b5565b6119ca5760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016105d3565b604080516002808252606082018352600092839283929091602083019080368337019050509050838160008151811061234b5761234b61445b565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061237a5761237a61445b565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd60e01b846040516024016123ba91906145d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516123f89190614599565b600060405180830381855afa9150503d8060008114612433576040519150601f19603f3d011682016040523d82523d6000602084013e612438565b606091505b5091509150816127185760405160206024820152600360448201526213d31160ea1b606482015260840160408051601f19818403018152919052602080820180516001600160e01b031662461bcd60e51b1781529151909120825191830191909120146124a8576124a88161279d565b600080886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156124e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250d91906144dd565b5050509350935050506000808a6001600160a01b031663252c09d784866001612536919061461c565b6125409190614637565b6040516001600160e01b031960e084901b16815261ffff9091166004820152602401608060405180830381865afa15801561257f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a3919061466a565b9350505091508061261e5760405163252c09d760e01b8152600060048201526001600160a01b038c169063252c09d790602401608060405180830381865afa1580156125f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612617919061466a565b5091935050505b61262e63ffffffff8316426146c3565b995089876000815181106126445761264461445b565b602002602001019063ffffffff16908163ffffffff16815250508a6001600160a01b031663883bdbfd60e01b8860405160240161268191906145d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516126bf9190614599565b600060405180830381855afa9150503d80600081146126fa576040519150601f19603f3d011682016040523d82523d6000602084013e6126ff565b606091505b50909650945085612713576127138561279d565b505050505b60008180602001905181019061272e91906146d6565b9050600087826000815181106127465761274661445b565b6020026020010151836001815181106127615761276161445b565b6020026020010151612773919061476d565b61277d919061479a565b9050600061278a826127e4565b97508896505050505050505b9250929050565b8051156127ac57805181602001fd5b60405162461bcd60e51b815260206004820152600d60248201526c3297b2b6b83a3c96b2b93937b960991b60448201526064016105d3565b60008060008360020b126127fb578260020b612803565b8260020b6000035b9050620d89e8811115612829576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361284057600160801b612852565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612886576ffff97272373d413259a46990580e213a0260801c5b60048216156128a5576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156128c4576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156128e3576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612902576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612921576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612940576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612960576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612980576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156129a0576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156129c0576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156129e0576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612a00576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612a20576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612a40576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612a61576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612a81576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612aa0576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612abd576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612ade578060001981612ada57612ada61456f565b0490505b640100000000810615612af2576001612af5565b60005b60ff16602082901c0192505050919050565b6040518061012001604052806000815260200160008152602001612b29612c0c565b8152602001612b36612c0c565b81526040805160608101825260008082526020828101829052928201529101908152602001612b63612ca5565b81526000602082018190526040820181905260609091015290565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040518060600160405280612bf86040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081525090565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b03168152602001612c706040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001612ca06040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b60405180610220016040528060006001600160a01b03168152602001600060020b8152602001600060020b815260200160006001600160401b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001612d41604051806040016040528060008152602001600081525090565b8152602001612bf8604051806040016040528060008152602001600081525090565b6001600160a01b0381168114610fb657600080fd5b600060208284031215612d8a57600080fd5b813561099581612d63565b600060208284031215612da757600080fd5b5035919050565b60018060a01b03808251168352806020830151166020840152506040810151805160408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e08401525060608101516108f1610100840182805182526020810151602083015260408101516040830152606081015160608301525050565b80516001600160a01b031682526020810151612e5c602084018260020b9052565b506040810151612e71604084018260020b9052565b506060810151612e8c60608401826001600160401b03169052565b506080818101519083015260a0808201519083015260c0808201519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a08082015180518285015260208101516101c085015250506101c08101516101e0612f258185018380518252602090810151910152565b82015161022084015250610200015161024090910152565b60006106608201905082518252602083015160208301526040830151612f666040840182612dae565b506060830151612f7a6101c0840182612dae565b50608083015180516103408401526020810151600290810b6103608501526040820151900b6103808401525060a0830151612fb96103a0840182612e3b565b5060c0830151151561060083015260e08301511515610620830152610100909201516106409091015290565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561301d5761301d612fe5565b60405290565b604051608081016001600160401b038111828210171561301d5761301d612fe5565b60405160c081016001600160401b038111828210171561301d5761301d612fe5565b60405160e081016001600160401b038111828210171561301d5761301d612fe5565b60405161022081016001600160401b038111828210171561301d5761301d612fe5565b60405161012081016001600160401b038111828210171561301d5761301d612fe5565b60405161010081016001600160401b038111828210171561301d5761301d612fe5565b604051601f8201601f191681016001600160401b038111828210171561311a5761311a612fe5565b604052919050565b8015158114610fb657600080fd5b803561077981613122565b8060020b8114610fb657600080fd5b60006060828403121561315c57600080fd5b613164612ffb565b90508135815260208201356131788161313b565b6020820152604082013561318b8161313b565b604082015292915050565b6000608082840312156131a857600080fd5b6131b0613023565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b60006101c082840312156131ed57600080fd5b6131f5613045565b82358152602083013561320781612d63565b6020820152604083013561321a81613122565b604082015261322c846060850161314a565b606082015261323e8460c08501613196565b6080820152613251846101408501613196565b60a08201529392505050565b60008060006060848603121561327257600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561329e57600080fd5b833592506020840135915060408401356132b781613122565b809150509250925092565b6001600160401b03808251168352602082015160020b6020840152604082015160020b6040840152806060830151166060840152506080810151613313608084018280518252602090810151910152565b5060a0810151805160c0840152602081015160e084015260408101516101008401526060810151610120840152608081015161014084015260a08101516101608401525060c081015161337461018084018280518252602090810151910152565b5060e0015180516101c0830152602001516101e090910152565b600060c08301825184526020808401518186015260408085015181870152606080860151818801526080860151608088015260a086015160c060a089015284815180875260e08a0191508583019650600092505b8083101561342b5786518051835286810151613400888501826132c2565b50808601516102208401528401516102408301529585019560019290920191610260909101906133e2565b5098975050505050505050565b602081526000610995602083018461338e565b600080600060a0848603121561346057600080fd5b83359250613471856020860161314a565b915060808401356132b781613122565b6001600160401b0381168114610fb657600080fd5b600080600080608085870312156134ac57600080fd5b84356134b781613481565b9350602085013592506040850135915060608501356134d581613122565b939692955090935050565b600082601f8301126134f157600080fd5b81356001600160401b0381111561350a5761350a612fe5565b61351d601f8201601f19166020016130f2565b81815284602083860101111561353257600080fd5b816020850160208301376000918101602001919091529392505050565b600060e0828403121561356157600080fd5b613569613067565b905081358152602082013560208201526040820135604082015260608201356060820152608082013560808201526135a360a08301613130565b60a082015260c08201356001600160401b038111156135c157600080fd5b6135cd848285016134e0565b60c08301525092915050565b600080600080608085870312156135ef57600080fd5b84359350602085013561360181613481565b925060408501356001600160401b0381111561361c57600080fd5b6136288782880161354f565b949793965093946060013593505050565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301525050565b61010081016106c88284613639565b6000806000606084860312156136ae57600080fd5b8335925060208401356136c081613481565b915060408401356001600160401b038111156136db57600080fd5b6136e78682870161354f565b9150509250925092565b60ff81168114610fb657600080fd5b6000806040838503121561371357600080fd5b823561371e81612d63565b9150602083013561372e816136f1565b809150509250929050565b6000806040838503121561374c57600080fd5b823561375781613481565b946020939093013593505050565b6000602080835260e0830184518285015281850151604085015260018060a01b036040860151166060850152606085015160808501526080850151151560a085015260a085015160c080860152818151808452610100870191508483019350600092505b808310156137f3576137dc8285516132c2565b6102008201915084840193506001830192506137c9565b509695505050505050565b6000806000610120848603121561381457600080fd5b833592506138258560208601613196565b91506138348560a08601613196565b90509250925092565b6000806040838503121561385057600080fd5b82359150602083013561372e81613122565b604081526000613875604083018561338e565b6020838203818501528185518084528284019150828160051b85010183880160005b838110156138c557601f198784030185526138b383835161338e565b94860194925090850190600101613897565b50909998505050505050505050565b600080600080600060a086880312156138ec57600080fd5b8535945060208601356138fe81613481565b935060408601356001600160401b0381111561391957600080fd5b6139258882890161354f565b93505060608601359150608086013561393d81613122565b809150509295509295909350565b82815261012081016109956020830184613639565b60008083601f84011261397257600080fd5b5081356001600160401b0381111561398957600080fd5b60208301915083602082850101111561279657600080fd5b600080600080606085870312156139b757600080fd5b843593506020850135925060408501356001600160401b038111156139db57600080fd5b6139e787828801613960565b95989497509550505050565b602080825260029082015261433160f01b604082015260600190565b805161077981612d63565b600060808284031215613a2c57600080fd5b613a34613023565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b6000818303610180811215613a7257600080fd5b613a7a613023565b91508251613a8781612d63565b82526020830151613a9781612d63565b602083015260c0603f1982011215613aae57600080fd5b50613ab7613045565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015280604083015250613b05836101008401613a1a565b606082015292915050565b80516107798161313b565b600060608284031215613b2d57600080fd5b613b35612ffb565b9050815181526020820151613b498161313b565b6020820152604082015161318b8161313b565b805161077981613481565b600060408284031215613b7957600080fd5b604051604081018181106001600160401b0382111715613b9b57613b9b612fe5565b604052825181526020928301519281019290925250919050565b60006102608284031215613bc857600080fd5b613bd0613089565b9050613bdb82613a0f565b8152613be960208301613b10565b6020820152613bfa60408301613b10565b6040820152613c0b60608301613b5c565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0613c7e84828501613b67565b908201526101e0613c9184848301613b67565b6101c08301526102208301519082015261024090910151610200820152919050565b805161077981613122565b60006106608284031215613cd157600080fd5b613cd96130ac565b8251815260208301516020820152613cf48460408501613a5e565b6040820152613d07846101c08501613a5e565b6060820152613d1a846103408501613b1b565b6080820152613d2d846103a08501613bb5565b60a0820152613d3f6106008401613cb3565b60c0820152613d516106208401613cb3565b60e0820152610640929092015161010083015250919050565b6000610200820190508482528360208301528251604083015260018060a01b0360208401511660608301526040830151151560808301526060830151613dd060a084018280518252602081015160020b6020830152604081015160020b60408301525050565b50608083015180516101008401526020810151610120840152604081015161014084015260608101516101608401525060a0830151805161018084015260208101516101a084015260408101516101c084015260608101516101e084015250949350505050565b600060208284031215613e4957600080fd5b5051919050565b60008060408385031215613e6357600080fd5b8251613e6e81613122565b6020939093015192949293505050565b6000815480845260208085019450836000528060002060005b83811015613f695781546001600160401b038082168952604082811c600290810b878c0152605884901c900b908a0152607082901c811660608a015250506001828101546080890152600283015460a0890152600383015460c0890152600483015460e089015260058301546101008901526006830154610120890152600783015461014089015260088301546101608901526009830154610180890152600a8301546101a0890152600b8301546101c0890152600c8301546101e089015261020090970196600d9092019101613e97565b509495945050505050565b83815282602082015260606040820152815460608201526001820154608082015260018060a01b0360028301541660a0820152600382015460c082015260ff600483015416151560e082015260c06101008201526000613fdb610120830160058501613e7e565b95945050505050565b60006001600160401b03821115613ffd57613ffd612fe5565b5060051b60200190565b600060c0828403121561401957600080fd5b614021613045565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b6000602080838503121561407257600080fd5b82516001600160401b038082111561408957600080fd5b9084019060c0828703121561409d57600080fd5b6140a5613045565b82518152838301518482015260408084015181830152606080850151818401526080850151608084015260a0850151848111156140e157600080fd5b80860195505088601f8601126140f657600080fd5b8451935061410b61410685613fe4565b6130f2565b848152610260948502860187019487820191908b87111561412b57600080fd5b968801965b8688101561422257878c03818112156141495760008081fd5b614151613023565b89518152610200601f19830112156141695760008081fd5b6141716130cf565b915061417e8b8b01613b5c565b825261418b878b01613b10565b8b83015261419a868b01613b10565b878301526141aa60808b01613b5c565b868301526141bb8e60a08c01613b67565b608083015260e06141ce8f828d01614007565b60a08401526141e18f6101a08d01613b67565b60c08401526141f48f6101e08d01613b67565b90830152808b0191909152610220890151868201526102408901518582015283529687019691880191614130565b5060a0850152509198975050505050505050565b83815260a08101614267602083018580518252602081015160020b6020830152604081015160020b60408301525050565b8215156080830152949350505050565b60005b8381101561429257818101518382015260200161427a565b50506000910152565b8481528360208201526001600160401b03831660408201526080606082015281516080820152602082015160a0820152604082015160c0820152606082015160e0820152608082015161010082015260a08201511515610120820152600060c083015160e06101408401528051806101608501526101806143228282870160208601614277565b80601f19601f840116860101935050505095945050505050565b600081830361010081121561435057600080fd5b614358612ffb565b60c082121561436657600080fd5b61436e613045565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e08401516040820152809250505092915050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016143f3576143f36143c8565b5060000390565b83815261012081016144306020830185805182526020810151602083015260408101516040830152606081015160608301525050565b825160a0830152602083015160c0830152604083015160e08301526060830151610100830152610b8b565b634e487b7160e01b600052603260045260246000fd5b600060018201614483576144836143c8565b5060010190565b60006020828403121561449c57600080fd5b815161099581612d63565b600080604083850312156144ba57600080fd5b505080516020909101519092909150565b805161ffff8116811461077957600080fd5b600080600080600080600060e0888a0312156144f857600080fd5b875161450381612d63565b60208901519097506145148161313b565b9550614522604089016144cb565b9450614530606089016144cb565b935061453e608089016144cb565b925060a088015161454e816136f1565b60c089015190925061455f81613122565b8091505092959891949750929550565b634e487b7160e01b600052601260045260246000fd5b6000826145945761459461456f565b500490565b600082516145ab818460208701614277565b9190910192915050565b6000602082840312156145c757600080fd5b815161099581613122565b6020808252825182820181905260009190848201906040850190845b8181101561461057835163ffffffff16835292840192918401916001016145ee565b50909695505050505050565b61ffff818116838216019080821115611fb557611fb56143c8565b600061ffff8084168061464c5761464c61456f565b92169190910692915050565b8051600681900b811461077957600080fd5b6000806000806080858703121561468057600080fd5b845163ffffffff8116811461469457600080fd5b93506146a260208601614658565b925060408501516146b281612d63565b60608601519092506134d581613122565b818103818111156106c8576106c86143c8565b600060208083850312156146e957600080fd5b82516001600160401b038111156146ff57600080fd5b8301601f8101851361471057600080fd5b805161471e61410682613fe4565b81815260059190911b8201830190838101908783111561473d57600080fd5b928401925b828410156147625761475384614658565b82529284019290840190614742565b979650505050505050565b600682810b9082900b03667fffffffffffff198112667fffffffffffff821317156106c8576106c86143c8565b60008160060b8360060b806147b1576147b161456f565b667fffffffffffff198214600019821416156147cf576147cf6143c8565b9005939250505056fea264697066735822122063b82d714db0562d8f61e7fab2471b2b7a153d42413e3fdfbcd22af5545480e764736f6c63430008130033'

type ControllerConstructorParams =
  | [linkLibraryAddresses: ControllerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(
        _abi,
        Controller__factory.linkBytecode(linkLibraryAddresses),
        signer
      )
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ControllerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$4278c074fd6acd31e7e5f642d169fef5d3\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/ReaderLogic.sol:ReaderLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$95910b7b93a5208ca27f4262a74795a535\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/AddPairLogic.sol:AddPairLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$82e740bfb21403018c74028207d6b78a82\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/ReallocationLogic.sol:ReallocationLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$a1fa80d38d689cae49e54718da49b6432c\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/LiquidationLogic.sol:LiquidationLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$22e71cc2a9e9de4b2967c224ed91c7d01e\\$__', 'g'),
      linkLibraryAddresses['src/libraries/logic/SupplyLogic.sol:SupplyLogic']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$1f4d3c4bb88e02f5b45caa05c79da92b33\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/UpdateMarginLogic.sol:UpdateMarginLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$0b623280e191457df753735b6fc86de420\\$__', 'g'),
      linkLibraryAddresses[
        'src/libraries/logic/TradePerpLogic.sol:TradePerpLogic'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    )

    return linkedBytecode
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Controller {
    return super.attach(address) as Controller
  }
  connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller
  }
}

export interface ControllerLibraryAddresses {
  ['src/libraries/logic/ReaderLogic.sol:ReaderLogic']: string
  ['src/libraries/logic/AddPairLogic.sol:AddPairLogic']: string
  ['src/libraries/logic/ReallocationLogic.sol:ReallocationLogic']: string
  ['src/libraries/logic/LiquidationLogic.sol:LiquidationLogic']: string
  ['src/libraries/logic/SupplyLogic.sol:SupplyLogic']: string
  ['src/libraries/logic/UpdateMarginLogic.sol:UpdateMarginLogic']: string
  ['src/libraries/logic/TradePerpLogic.sol:TradePerpLogic']: string
}
